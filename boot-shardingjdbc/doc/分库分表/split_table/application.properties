# \u6570\u636E\u6E90 mydb,db1
sharding.jdbc.datasource.names=mydb
# \u7B2C\u4E00\u4E2A\u6570\u636E\u5E93
sharding.jdbc.datasource.mydb.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.mydb.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.mydb.jdbc-url=jdbc:mysql://192.168.131.139:3306/mydb?characterEncoding=utf-8&serverTimezone=GMT%2B8&useSSL=false
sharding.jdbc.datasource.mydb.username=root
sharding.jdbc.datasource.mydb.password=root

# \u5206\u8868\u7B56\u7565 \u5176\u4E2Duser\u4E3A\u903B\u8F91\u8868 \u5206\u8868\u4E3B\u8981\u53D6\u51B3\u4E8Egender
sharding.jdbc.config.sharding.tables.user.actual-data-nodes=mydb.user_$->{0..1}
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.sharding-column=gender
# \u5206\u7247\u7B97\u6CD5\u8868\u8FBE\u5F0F
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.algorithm-expression=user_$->{gender%2}
# \u81EA\u5B9A\u4E49\u7B97\u6CD5\u5B9E\u73B0\u63A5\u53E3 PreciseShardingAlgorithm
#spring.shardingsphere.sharding.tables.user.table-strategy.standard.precise-algorithm-class-name=io.shardingsphere.api.algorithm.sharding.standard.PreciseShardingAlgorithm

# \u6253\u5370\u6267\u884C\u7684\u6570\u636E\u5E93\u4EE5\u53CA\u8BED\u53E5
sharding.jdbc.config.props..sql.show=true
spring.main.allow-bean-definition-overriding=true